33. Search in Rotated Sorted Array
class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if target in nums:
            return nums.index(target)
        else:
            return -1

34. Find First and Last Position of Element in Sorted Array
class Solution(object):
    def searchRange(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        if nums.count(target) >=2:
            return [nums.index(target), len(nums) - nums[::-1].index(target)-1]
        elif nums.count(target) == 1:
            return [nums.index(target), nums.index(target)]
        else:
            return [-1, -1]
            
35. Search Insert Position    
method 1:
class Solution(object):
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if target in nums: 
            return nums.index(target)
        for i in range(len(nums)):
            if nums[i] < target:
                continue
            else:
                break
        if i == len(nums)-1:
            if nums[i] > target:
                return i
            else:
                return i+1
        else:
            return i
 method 2:
 class Solution(object):
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        for i in range(len(nums)):
            if nums[i] < target:
                continue
           else:
                return i
        if i == len(nums) - 1:
            return i+1
            
  
